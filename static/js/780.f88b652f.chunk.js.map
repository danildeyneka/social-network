{"version":3,"file":"static/js/780.f88b652f.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/Users.module.scss?b204","redux/selectors/usersSelectors.ts","components/Users/UserProfile/UserProfile.tsx","webpack://my-app/./src/components/common/Pagination/Pagination.module.scss?9a07","components/common/Pagination/Pagination.tsx","components/Users/UserSearch.tsx","components/Users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user__avatar\":\"Users_user__avatar__XRer4\"};","import {RootState} from \"../store\";\r\n\r\nexport const selectIsFetching = (state: RootState) => state.usersPage.isFetching\r\nexport const selectPageSize = (state: RootState) => state.usersPage.pageSize\r\nexport const selectUsersData = (state: RootState) => state.usersPage.usersData\r\nexport const selectFollowingInProgress = (state: RootState) => state.usersPage.followingInProgress\r\nexport const selectCurrentPage = (state: RootState) => state.usersPage.currentPage\r\nexport const selectTotalUsersCount = (state: RootState) => state.usersPage.totalUsersCount\r\nexport const selectFilter = (state: RootState) => state.usersPage.filter","import c from \"../Users.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport initialPhoto from \"../../../assets/images/avatar.png\";\r\nimport {follow, unfollow} from \"../../../redux/usersReducer\";\r\nimport {FC} from \"react\";\r\nimport {selectFollowingInProgress, selectUsersData} from \"../../../redux/selectors/usersSelectors\";\r\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/hooks\";\r\n\r\nconst UserProfile: FC = () => {\r\n    const usersData = useAppSelector(selectUsersData)\r\n    const followingInProgress = useAppSelector(selectFollowingInProgress)\r\n    const dispatch = useAppDispatch()\r\n\r\n    return (\r\n        <div className={c.user}>\r\n            {usersData.map(u => <div key={u.id}>\r\n                <NavLink to={`/profile/${u.id}`}>\r\n                    <img className={c.user__avatar}\r\n                         src={u.photos.small !== null ? u.photos.small : initialPhoto}\r\n                         alt='img'/>\r\n                </NavLink>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={followingInProgress.includes(u.id)}\r\n                                  onClick={() => {\r\n                                      dispatch(unfollow(u.id))\r\n                                  }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.includes(u.id)}\r\n                                  onClick={() => {\r\n                                      dispatch(follow(u.id))\r\n                                  }}>Follow</button>}\r\n                </div>\r\n                <div className={c.user__info}>\r\n                    <div className={c.user__name}>{u.name}</div>\r\n                    <div className={c.user__status}>{u.status}</div>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile","// extracted by mini-css-extract-plugin\nexport default {\"pages\":\"Pagination_pages__tYDX0\",\"selected\":\"Pagination_selected__PQPcu\"};","import c from \"./Pagination.module.scss\";\r\nimport {FC} from \"react\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nconst Pagination: FC<PropsType> = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages: Array<number> = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let prevPage = ((currentPage - 5) < 0) ? 0 : currentPage - 5\r\n    let nextPage = currentPage + 5\r\n    let slicedPages = pages.slice(prevPage, nextPage)\r\n\r\n    return (\r\n        <div className={c.pages}>\r\n            {slicedPages.map(p => <span key={p} className={currentPage === p ? c.selected : ''}\r\n                                        onClick={() => onPageChanged(p)}>{`${p} `}</span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import {FC} from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {UsersFilterType} from \"../../redux/usersReducer\";\r\n\r\ntype PropsType = {\r\n    onFilterChange: (filter: UsersFilterType) => void\r\n}\r\n\r\nconst UserSearch: FC<PropsType> = (props) => {\r\n\r\nconst validateUsers = (values: any) => {\r\n    return {}\r\n}\r\n\r\nconst onSubmit = (values: UsersFilterType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n    props.onFilterChange(values)\r\n    setSubmitting(false)\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Formik initialValues={{term: '', friend: ''}} onSubmit={onSubmit} validate={validateUsers}>\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type='text' name='term'/>\r\n                    <Field name='friend' as='select'>\r\n                        <option value='null'>All</option>\r\n                        <option value='true'>Only followed</option>\r\n                        <option value='false'>Only unfollowed</option>\r\n                    </Field>\r\n                    <button type='submit' disabled={isSubmitting}>Find</button>\r\n                </Form>\r\n            )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSearch","import {getUsers, UsersFilterType} from \"../../redux/usersReducer\";\r\nimport {FC, useEffect} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport UserProfile from \"./UserProfile/UserProfile\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport {\r\n    selectCurrentPage,\r\n    selectFilter,\r\n    selectIsFetching,\r\n    selectPageSize,\r\n    selectTotalUsersCount\r\n} from \"../../redux/selectors/usersSelectors\"\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/hooks\"\r\nimport UserSearch from \"./UserSearch\"\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {Logger} from \"sass\";\r\nimport {logIn} from \"../../redux/authReducer\";\r\n\r\nconst Users: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const isFetching = useAppSelector(selectIsFetching)\r\n    const pageSize = useAppSelector(selectPageSize)\r\n    const currentPage = useAppSelector(selectCurrentPage)\r\n    const totalUsersCount = useAppSelector(selectTotalUsersCount)\r\n    const filter = useAppSelector(selectFilter)\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n        dispatch(getUsers(currentPage, pageSize, filter))\r\n    }\r\n    const onFilterChange = (filter: UsersFilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentPage !== 1 || filter.friend !== '' || filter.term !== '')\r\n            setSearchParams(`?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`)\r\n        // console.log(searchParams.get('page'))\r\n        // if (searchParams.get('page') !== String(currentPage))\r\n        //     searchParams.set('page', '3')\r\n        // console.log(searchParams.get('page'))\r\n    }, [currentPage, searchParams])\r\n    useEffect(() => {\r\n        dispatch(getUsers(currentPage, pageSize, filter))\r\n    }, [currentPage])\r\n    // todo url sync ??\r\n\r\n    return (<>\r\n        {isFetching\r\n            ? <Preloader/>\r\n            : <div>\r\n                <UserSearch onFilterChange={onFilterChange}/>\r\n                <Pagination currentPage={currentPage} pageSize={pageSize} totalUsersCount={totalUsersCount}\r\n                            onPageChanged={onPageChanged}/>\r\n                <UserProfile/>\r\n            </div>}\r\n    </>)\r\n}\r\nexport default Users\r\n"],"names":["selectIsFetching","state","usersPage","isFetching","selectPageSize","pageSize","selectUsersData","usersData","selectFollowingInProgress","followingInProgress","selectCurrentPage","currentPage","selectTotalUsersCount","totalUsersCount","selectFilter","filter","useAppSelector","dispatch","useAppDispatch","className","c","map","u","to","id","src","photos","small","initialPhoto","alt","followed","disabled","includes","onClick","unfollow","follow","name","status","onPageChanged","pagesCount","Math","ceil","pages","i","push","prevPage","nextPage","slicedPages","slice","p","props","initialValues","term","friend","onSubmit","values","setSubmitting","onFilterChange","validate","isSubmitting","type","as","value","useSearchParams","searchParams","setSearchParams","useEffect","getUsers","Preloader"],"sourceRoot":""}