{"version":3,"file":"static/js/664.855b5d10.chunk.js","mappings":"gKAGMA,EAAK,IAAIC,UAAU,gEAkBnBC,EAAe,WACjB,OAAgCC,EAAAA,EAAAA,UAA2B,IAA3D,eAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACNN,EAAGO,iBAAiB,WAAW,SAACC,GAC5B,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAAAQ,GAAK,wBAAQA,IAAR,OAAkBJ,GAAlB,GACpB,GACJ,GAAE,KAEI,+BACH,gBAAKK,MAAO,CAACC,OAAQ,IAAKC,UAAW,QAArC,SACKZ,EAASa,KAAI,SAACC,EAAGC,GAAJ,OAAc,SAACC,EAAD,CAAqBC,QAASH,GAAhBC,EAA5B,OAGzB,EAEKC,EAA2C,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAE/C,OAAO,iCACH,gBAAKC,IAAI,SAASC,IAAKF,EAAQG,MAAOV,MAAO,CAACW,MAAO,OACrD,uBAAIJ,EAAQK,YACZ,yBAAML,EAAQA,YAErB,EAEKM,EAAiB,WACnB,OAA8BxB,EAAAA,EAAAA,UAAS,IAAvC,eAAOkB,EAAP,KAAgBO,EAAhB,KAQA,OAAO,iCACH,0BACI,qBAAUC,SAAU,SAACrB,GAAD,OAAKoB,EAAWpB,EAAEsB,cAAcC,MAAMC,OAAtC,EAA+CD,MAAOV,OAE9E,0BACI,mBAAQY,QAZI,WAEXZ,IACLrB,EAAGkC,KAAKb,GACRO,EAAW,IACd,EAOO,sBAGX,EAGKO,GAAwBC,EAAAA,EAAAA,IAxDR,WAElB,OACI,4BACI,SAAClC,EAAD,KACA,SAACyB,EAAD,MAGX,IAiDD,W","sources":["components/Messenger/Messenger.tsx"],"sourcesContent":["import {FC, useEffect, useState} from \"react\";\r\nimport withRedirect from \"../../hoc/withRedirect\";\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\ntype WSMessagesType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst Messenger: FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Messages/>\r\n            <AddMessage/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: FC = () => {\r\n    const [messages, setMessages] = useState<WSMessagesType[]>([])\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener('message', (e: MessageEvent) => {\r\n            let newMessages = JSON.parse(e.data);\r\n            setMessages(state => [...state, ...newMessages])\r\n        })\r\n    }, [])\r\n\r\n    return <>\r\n        <div style={{height: 400, overflowY: \"auto\"}}>\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst Message: FC<{ message: WSMessagesType }> = ({message}) => {\r\n\r\n    return <>\r\n        <img alt=\"avatar\" src={message.photo} style={{width: 30}}/>\r\n        <b>{message.userName}</b>\r\n        <div>{message.message}</div>\r\n    </>\r\n}\r\n\r\nconst AddMessage: FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const sendMessage = () => {\r\n        debugger\r\n        if (!message) return\r\n        ws.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <textarea onChange={(e)=>setMessage(e.currentTarget.value.trim())} value={message}/>\r\n        </div>\r\n        <div>\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nconst MessengerWithRedirect = withRedirect(Messenger)\r\nexport default MessengerWithRedirect"],"names":["ws","WebSocket","Messages","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","state","style","height","overflowY","map","m","index","Message","message","alt","src","photo","width","userName","AddMessage","setMessage","onChange","currentTarget","value","trim","onClick","send","MessengerWithRedirect","withRedirect"],"sourceRoot":""}