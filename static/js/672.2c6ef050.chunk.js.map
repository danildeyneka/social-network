{"version":3,"file":"static/js/672.2c6ef050.chunk.js","mappings":"oLACA,EAAuB,oBAAvB,EAAwD,0BAAxD,EAAkG,6BAAlG,EAA8I,4BAA9I,EAAsL,yB,oBCCzKA,EAAmB,SAACC,GAAD,OAAsBA,EAAMC,UAAUC,UAAtC,EACnBC,EAAiB,SAACH,GAAD,OAAsBA,EAAMC,UAAUG,QAAtC,EACjBC,EAAkB,SAACL,GAAD,OAAsBA,EAAMC,UAAUK,SAAtC,EAClBC,EAA4B,SAACP,GAAD,OAAsBA,EAAMC,UAAUO,mBAAtC,EAC5BC,EAAoB,SAACT,GAAD,OAAsBA,EAAMC,UAAUS,WAAtC,EACpBC,EAAwB,SAACX,GAAD,OAAsBA,EAAMC,UAAUW,eAAtC,EACxBC,EAAe,SAACb,GAAD,OAAsBA,EAAMC,UAAUa,MAAtC,E,4BC+B5B,EA9BwB,WACpB,IAAMR,GAAYS,EAAAA,EAAAA,GAAeV,GAC3BG,GAAsBO,EAAAA,EAAAA,GAAeR,GACrCS,GAAWC,EAAAA,EAAAA,KAEjB,OACI,gBAAKC,UAAWC,EAAhB,SACKb,EAAUc,KAAI,SAAAC,GAAC,OAAI,iBAAgBH,UAAWC,EAA3B,WAChB,gBAAKD,UAAWC,EAAhB,SAA+BE,EAAEC,QACjC,SAAC,KAAD,CAASC,GAAE,mBAAcF,EAAEG,IAA3B,UACI,gBAAKN,UAAWC,EACXM,IAAwB,OAAnBJ,EAAEK,OAAOC,MAAiBN,EAAEK,OAAOC,MAAQC,EAChDC,IAAI,WAEb,gBAAMX,UAAWC,EAAjB,SACKE,EAAES,UACG,SAAC,IAAD,CAAQC,SAAUvB,EAAoBwB,SAASX,EAAEG,IACzCS,QAAS,WACLjB,GAASkB,EAAAA,EAAAA,IAASb,EAAEG,IACvB,EAHT,uBAIA,SAAC,IAAD,CAAQO,SAAUvB,EAAoBwB,SAASX,EAAEG,IACzCS,QAAS,WACLjB,GAASmB,EAAAA,EAAAA,IAAOd,EAAEG,IACrB,EAHT,wBAbgBH,EAAEG,GAAhB,KAqB3B,E,UCID,EAhCkC,SAACY,GAW/B,OACI,0BACI,SAAC,KAAD,CAAQC,cAAe,CAACC,KAAM,GAAIC,OAAQ,IAAKC,SAPtC,SAACC,EAAD,GAAmG,IAAxEC,EAAuE,EAAvEA,cACxCN,EAAMO,eAAeF,GACrBC,GAAc,EACjB,EAI0EE,SAXrD,SAACH,GACnB,MAAO,CAAC,CACX,EASO,SACK,gBAAEI,EAAF,EAAEA,aAAF,OACG,UAAC,KAAD,YACI,SAAC,KAAD,CAAO3B,UAAU,YAAY4B,MAAO,CAACC,MAAO,IAAKC,YAAa,GAAIC,aAAc,IAAKC,KAAK,OAAO5B,KAAK,UACtG,UAAC,KAAD,CAAOwB,MAAO,CAACK,YAAa,WAAY7B,KAAK,SAAS8B,GAAG,SAAzD,WACI,mBAAQC,MAAM,OAAd,kBACA,mBAAQA,MAAM,OAAd,4BACA,mBAAQA,MAAM,QAAd,iCAEJ,mBAAQnC,UAAU,0BAA0BgC,KAAK,SAASJ,MAAO,CAACQ,WAAY,IACtEvB,SAAUc,EADlB,oBARP,KAgBhB,E,UCSD,EAhCkB,WACd,IAAM7B,GAAWC,EAAAA,EAAAA,KACXf,GAAaa,EAAAA,EAAAA,GAAehB,GAC5BK,GAAWW,EAAAA,EAAAA,GAAeZ,GAC1BO,GAAcK,EAAAA,EAAAA,GAAeN,GAC7BG,GAAkBG,EAAAA,EAAAA,GAAeJ,GACjCG,GAASC,EAAAA,EAAAA,GAAeF,GAa9B,OAJA0C,EAAAA,EAAAA,YAAU,WACNvC,GAASwC,EAAAA,EAAAA,IAAS9C,EAAaN,EAAUU,GAC5C,GAAE,CAACJ,EAAaN,KAET,8BACHF,GACK,SAACuD,EAAA,EAAD,KACA,4BACE,SAAC,EAAD,CAAYd,eAZD,SAAC7B,GACpBE,GAASwC,EAAAA,EAAAA,IAAS,EAAGpD,EAAUU,GAClC,KAaW,SAAC,IAAD,CAAY4C,QAAShD,EAAaiD,MAAO/C,EAAiBgD,SAlBhD,SAAClD,GACnBM,GAASwC,EAAAA,EAAAA,IAAS9C,EAAaN,EAAUU,GAC5C,EAiBuBgC,MAAO,CAACG,aAAc,IAAKY,iBAAiB,KACxD,SAAC,EAAD,QAGf,C","sources":["webpack://my-app/./src/components/Users/Users.module.scss?b204","redux/selectors/usersSelectors.ts","components/Users/UserProfile/UserProfile.tsx","components/Users/UserSearch.tsx","components/Users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user\":\"Users_user__bp9Af\",\"user__name\":\"Users_user__name__b80mw\",\"user__wrapper\":\"Users_user__wrapper__1a7u+\",\"user__avatar\":\"Users_user__avatar__XRer4\",\"user__btn\":\"Users_user__btn__IPH28\"};","import {RootState} from \"../store\";\r\n\r\nexport const selectIsFetching = (state: RootState) => state.usersPage.isFetching\r\nexport const selectPageSize = (state: RootState) => state.usersPage.pageSize\r\nexport const selectUsersData = (state: RootState) => state.usersPage.usersData\r\nexport const selectFollowingInProgress = (state: RootState) => state.usersPage.followingInProgress\r\nexport const selectCurrentPage = (state: RootState) => state.usersPage.currentPage\r\nexport const selectTotalUsersCount = (state: RootState) => state.usersPage.totalUsersCount\r\nexport const selectFilter = (state: RootState) => state.usersPage.filter","import c from \"../Users.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport initialPhoto from \"../../../assets/images/avatar.png\";\r\nimport {follow, unfollow} from \"../../../redux/usersReducer\";\r\nimport {FC} from \"react\";\r\nimport {selectFollowingInProgress, selectUsersData} from \"../../../redux/selectors/usersSelectors\";\r\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/hooks\";\r\nimport {Button} from 'antd'\r\n\r\nconst UserProfile: FC = () => {\r\n    const usersData = useAppSelector(selectUsersData)\r\n    const followingInProgress = useAppSelector(selectFollowingInProgress)\r\n    const dispatch = useAppDispatch()\r\n\r\n    return (\r\n        <div className={c.user}>\r\n            {usersData.map(u => <div key={u.id} className={c.user__wrapper}>\r\n                <div className={c.user__name}>{u.name}</div>\r\n                <NavLink to={`/profile/${u.id}`}>\r\n                    <img className={c.user__avatar}\r\n                         src={u.photos.small !== null ? u.photos.small : initialPhoto}\r\n                         alt='img'/>\r\n                </NavLink>\r\n                <div  className={c.user__btn}>\r\n                    {u.followed\r\n                        ? <Button disabled={followingInProgress.includes(u.id)}\r\n                                  onClick={() => {\r\n                                      dispatch(unfollow(u.id))\r\n                                  }}>Unfollow</Button>\r\n                        : <Button disabled={followingInProgress.includes(u.id)}\r\n                                  onClick={() => {\r\n                                      dispatch(follow(u.id))\r\n                                  }}>Follow</Button>}\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile","import {FC} from 'react'\r\nimport {Field, Form, Formik} from 'formik'\r\nimport {UsersFilterType} from '../../redux/usersReducer'\r\n\r\n\r\ntype PropsType = {\r\n    onFilterChange: (filter: UsersFilterType) => void\r\n}\r\n\r\nconst UserSearch: FC<PropsType> = (props) => {\r\n\r\n    const validateUsers = (values: any) => {\r\n        return {}\r\n    }\r\n\r\n    const onSubmit = (values: UsersFilterType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        props.onFilterChange(values)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik initialValues={{term: '', friend: ''}} onSubmit={onSubmit} validate={validateUsers}>\r\n                {({isSubmitting}) => (\r\n                    <Form>\r\n                        <Field className=\"ant-input\" style={{width: 200, marginRight: 10, marginBottom: 10}} type=\"text\" name=\"term\"/>\r\n                        <Field style={{borderColor: '#1890ff'}} name=\"friend\" as=\"select\">\r\n                            <option value=\"null\">All</option>\r\n                            <option value=\"true\">Only followed</option>\r\n                            <option value=\"false\">Only unfollowed</option>\r\n                        </Field>\r\n                        <button className=\"ant-btn ant-btn-primary\" type=\"submit\" style={{marginLeft: 10}}\r\n                                disabled={isSubmitting}>Find\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSearch","import {getUsers, UsersFilterType} from '../../redux/usersReducer'\r\nimport {FC, useEffect} from 'react'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport UserProfile from './UserProfile/UserProfile'\r\n// import Pagination from '../common/Pagination/Pagination'\r\nimport {\r\n    selectCurrentPage,\r\n    selectFilter,\r\n    selectIsFetching,\r\n    selectPageSize,\r\n    selectTotalUsersCount\r\n} from '../../redux/selectors/usersSelectors'\r\nimport {useAppDispatch, useAppSelector} from '../../hooks/hooks'\r\nimport UserSearch from './UserSearch'\r\nimport {Pagination} from 'antd'\r\n\r\nconst Users: FC = () => {\r\n    const dispatch = useAppDispatch()\r\n    const isFetching = useAppSelector(selectIsFetching)\r\n    const pageSize = useAppSelector(selectPageSize)\r\n    const currentPage = useAppSelector(selectCurrentPage)\r\n    const totalUsersCount = useAppSelector(selectTotalUsersCount)\r\n    const filter = useAppSelector(selectFilter)\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n        dispatch(getUsers(currentPage, pageSize, filter))\r\n    }\r\n    const onFilterChange = (filter: UsersFilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(currentPage, pageSize, filter))\r\n    }, [currentPage, pageSize])\r\n\r\n    return (<>\r\n        {isFetching\r\n            ? <Preloader/>\r\n            : <div>\r\n                <UserSearch onFilterChange={onFilterChange}/>\r\n                {/*<Pagination currentPage={currentPage} pageSize={pageSize} totalUsersCount={totalUsersCount}*/}\r\n                {/*            onPageChanged={onPageChanged}/>*/}\r\n                <Pagination current={currentPage} total={totalUsersCount} onChange={onPageChanged}\r\n                            style={{marginBottom: 10}} showSizeChanger={false} />\r\n                <UserProfile/>\r\n            </div>}\r\n    </>)\r\n}\r\nexport default Users\r\n"],"names":["selectIsFetching","state","usersPage","isFetching","selectPageSize","pageSize","selectUsersData","usersData","selectFollowingInProgress","followingInProgress","selectCurrentPage","currentPage","selectTotalUsersCount","totalUsersCount","selectFilter","filter","useAppSelector","dispatch","useAppDispatch","className","c","map","u","name","to","id","src","photos","small","initialPhoto","alt","followed","disabled","includes","onClick","unfollow","follow","props","initialValues","term","friend","onSubmit","values","setSubmitting","onFilterChange","validate","isSubmitting","style","width","marginRight","marginBottom","type","borderColor","as","value","marginLeft","useEffect","getUsers","Preloader","current","total","onChange","showSizeChanger"],"sourceRoot":""}